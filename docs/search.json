[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ambivalent 🤷🏻‍",
    "section": "",
    "text": "opinionated \\longrightarrow ambivalent\nClean, simple style for Matplotlib figures.\nTransparent backgrounds with grey text \\textcolor{#838383}{\\blacksquare} that are accessible / legible and {light, dark}-mode independent."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "ambivalent 🤷🏻‍",
    "section": "Install",
    "text": "Install\npython3 -m pip install ambivalent"
  },
  {
    "objectID": "index.html#galleryexamples",
    "href": "index.html#galleryexamples",
    "title": "ambivalent 🤷🏻‍",
    "section": "Gallery1",
    "text": "Gallery1\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: seaborn.jointplot\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: spectrum\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: tips dataset\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: 2D KDE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: Histograms\n\n\n\n\n\n\n\n\n\nMore Examples…\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: |J_{f}|\n\n\n\n\n\n\n\n\n\n\n\nFigure 7: |J_{b}|\n\n\n\n\n\n\n\n\n\n\n\nFigure 8: |J|\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) \\delta Q_{\\mathrm{train}}\n\n\n\n\n\n\n\nFigure 9: Figure from l2hmc-qcd Notebook\n\n\n\n\nInferenceData\n\n\n\n\n\n\nFigure 10: \\varepsilon_{x} during training\n\n\n\n\n\n\n\n\n\nFigure 11: \\varepsilon_{x} during training\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) \\sum \\delta Q\n\n\n\n\n\n\n\nFigure 12: Figure from l2hmc-qcd Notebook"
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "ambivalent 🤷🏻‍",
    "section": "Getting Started",
    "text": "Getting Started\n\n\nimport ambivalent\nimport matplotlib.pyplot as plt\nplt.style.use(ambivalent.STYLES['ambivalent'])\n\nFailed to download font: IBM Plex Sans, skipping!\nFailed to download font: IBM Plex Sans Condensed, skipping!\nFailed to download font: IBM Plex Serif, skipping!"
  },
  {
    "objectID": "index.html#examples",
    "href": "index.html#examples",
    "title": "ambivalent 🤷🏻‍",
    "section": "Examples",
    "text": "Examples\n\nseaborn Tips Dataset\n\nSeaborn Gallery\n\nTips Dataset Example\n\n\n\n\ncode:\nimport seaborn as sns\n\ntips = sns.load_dataset(\"tips\")\ntips.head()\n\nfig, ax = plt.subplots(figsize=(6, 6))  # , ncols=2)\n\n_ = sns.kdeplot(\n   data=tips, x=\"total_bill\", hue=\"size\",\n   fill=True, common_norm=False, palette=\"flare_r\",\n   alpha=.3, linewidth=0,\n   ax=ax,  # [0],\n)\n_ = ax.set_ylabel('')\n\n\n\n\n\n\n\n\n\n\nFigure 13: Tips – Density Plot\n\n\n\n\n\n\n\n\n\nseaborn Scatter Plot\n\n\ncode:\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the example diamonds dataset\ndiamonds = sns.load_dataset(\"diamonds\")\n\n# Draw a scatter plot while assigning point colors and sizes to different\n# variables in the dataset\nf, ax = plt.subplots(figsize=(6, 6))\n_ = sns.despine(f, left=True, bottom=True)\n_ = clarity_ranking = [\"I1\", \"SI2\", \"SI1\", \"VS2\", \"VS1\", \"VVS2\", \"VVS1\", \"IF\"]\n_ = sns.scatterplot(x=\"carat\", y=\"price\",\n                hue=\"clarity\", size=\"depth\",\n                palette=\"flare\",\n                hue_order=clarity_ranking,\n                sizes=(1, 8), linewidth=0,\n                data=diamonds, ax=ax)\n\n\n\n\n\n\n\n\n\n\nFigure 14: scatter plot with markers of varying size and color\n\n\n\n\n\n\n\n\n\nHistogram + Scatter Plot\n\n\ncode:\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Simulate data from a bivariate Gaussian\nn = 10000\nmean = [0, 0]\ncov = [(2, .4), (.4, .2)]\nrng = np.random.RandomState(0)\nx, y = rng.multivariate_normal(mean, cov, n).T\n\n# Draw a combo histogram and scatterplot with density contours\nf, ax = plt.subplots(figsize=(6, 6))\n_ = sns.scatterplot(x=x, y=y, s=5, color=\"#666666\", alpha=0.3)\n_ = sns.histplot(x=x, y=y, bins=50, pthresh=.1, cmap=\"flare_r\")\n_ = sns.kdeplot(x=x, y=y, levels=5, color=\"w\", linewidths=1)\n_ = ax.set_xlabel('x')\n_ = ax.set_ylabel('y')\n_ = plt.show()\n\n\n\n\n\n\n\n\n\n\nFigure 15: Combo histogram + Scatter Plot with Density Contours\n\n\n\n\n\n\n\n\n\nJointplot\n\n\ncode:\nimport seaborn as sns\n# Load the penguins dataset\npenguins = sns.load_dataset(\"penguins\")\n# Show the joint distribution using kernel density estimation\nimport matplotlib as mpl\nwith mpl.rc_context(plt.rcParams.update({'axes.grid': False})):\n  g = sns.jointplot(\n      data=penguins,\n      x=\"bill_length_mm\",\n      y=\"bill_depth_mm\",\n      hue=\"species\",\n      edgecolors='none',\n      alpha=0.4,\n  )\n  _ = plt.grid(False)\n  plt.show()\n\n\n\n\n\n\n\n\n\n\nFigure 16: Joint Distribution with Kernel Density Estimation\n\n\n\n\n\n\n\n\n\nMatplotlib Histograms\n\n\ncode:\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nn_bins = 10\nx = np.random.randn(1000, 3)\n\nplt.rcParams['axes.grid'] = True\n\nfig, ((ax0, ax1), (ax2, ax3)) = plt.subplots(nrows=2, ncols=2)\n\ncolors = ['#333333', '#666666', '#999999']\nax0.hist(x, n_bins, density=True, histtype='bar', color=colors, label=colors)\n_ = ax0.legend()\n_ = ax0.set_title('bars with legend')\n\n_ = ax1.hist(x, n_bins, density=True, histtype='bar', stacked=True, alpha=0.4)\n_ = ax1.set_title('stacked bar')\n\n_ = ax2.hist(x, n_bins, histtype='step', stacked=True, fill=False)\n_ = ax2.set_title('stack step (unfilled)')\n\n# Make a multiple-histogram of data-sets with different length.\nx_multi = [np.random.randn(n) for n in [10000, 5000, 2000]]\n_ = ax3.hist(x_multi, n_bins, histtype='bar')\n_ = ax3.set_title('different sample sizes')\n\n_ = fig.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\nFigure 17: Histograms with Matplotlib\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n💝 Status\n\n\n\n\n\n\n\n\nLast Updated: 05/13/2024 @ 20:29:30"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "ambivalent 🤷🏻‍",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nExamples from Matplotlib Examples↩︎"
  }
]